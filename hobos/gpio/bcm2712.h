#ifndef __BCM2712_GPIO_H
#define __BCM2712_GPIO_H

#define	BCM2712_GPIO_BASE 0xd0000

/*
 * RPI 5 GPIO, passes via RP1
 */

#define RP1_NR_GPIO_PINS	27

#define RP1_GPIO_STATUS_ADDR(pin_nr) \
	(gpio_base + 0x08*pin_nr) 

#define RP1_GPIO_CTRL_ADDR(pin_nr) \
	(RP1_GPIO_STATUS_ADDR(pin_nr) + 0x04) 

#define RP1_RW_OFFSET			0x0000
#define RP1_XOR_OFFSET			0x1000
#define RP1_SET_OFFSET			0x2000
#define RP1_CLR_OFFSET			0x3000

#define RP1_GPIO_CTRL_FUNCSEL_LSB	0
#define RP1_GPIO_CTRL_FUNCSEL_MASK	0x0000001f
#define RP1_GPIO_CTRL_OUTOVER_LSB	12
#define RP1_GPIO_CTRL_OUTOVER_MASK	0x00003000
#define RP1_GPIO_CTRL_OEOVER_LSB	14
#define RP1_GPIO_CTRL_OEOVER_MASK	0x0000c000
#define RP1_GPIO_CTRL_INOVER_LSB	16
#define RP1_GPIO_CTRL_INOVER_MASK	0x00030000
#define RP1_GPIO_CTRL_IRQEN_FALLING	BIT(20)
#define RP1_GPIO_CTRL_IRQEN_RISING	BIT(21)
#define RP1_GPIO_CTRL_IRQEN_LOW		BIT(22)
#define RP1_GPIO_CTRL_IRQEN_HIGH	BIT(23)
#define RP1_GPIO_CTRL_IRQEN_F_FALLING	BIT(24)
#define RP1_GPIO_CTRL_IRQEN_F_RISING	BIT(25)
#define RP1_GPIO_CTRL_IRQEN_F_LOW	BIT(26)
#define RP1_GPIO_CTRL_IRQEN_F_HIGH	BIT(27)
#define RP1_GPIO_CTRL_IRQRESET		BIT(28)
#define RP1_GPIO_CTRL_IRQOVER_LSB	30
#define RP1_GPIO_CTRL_IRQOVER_MASK	0xc0000000


/*
 * RP1 uses the RIO interface to manipulate GPIO
 *
 * NOTE: RIO1 and RIO2 are reserved
 * */
#define RP1_SYS_RIO0			0x10000

#define RIO_REG(offset) \
	(GPIO_REG(RP1_SYS_RIO0) + offset)

#define RP1_RIO_OUT			0x00
#define RP1_RIO_OE			0x04
#define RP1_RIO_IN			0x08

#endif
